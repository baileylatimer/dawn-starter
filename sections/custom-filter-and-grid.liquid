{% schema %}
{
  "name": "Custom Filter and Grid",
  "settings": [
    {
      "type": "text",
      "id": "filter_title",
      "label": "Filter Title",
      "default": "Filter by"
    }
  ]
}
{% endschema %}

<style>
.custom-filter-and-grid {
  display: flex;
  gap: 20px;
}

.filter-sidebar {
  width: 350px;
  height: fit-content;
  border-radius: 20px;
}

.filter-sidebar.sticky {
  position: fixed;
  top: 20px;
}

.product-grid-wrapper {
  flex: 1;
  position: relative;
}

.product-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
  margin-bottom: 60px;
}

.filter-group ul {
  list-style-type: none;
  padding: 0;
}

.filter-group li {
  margin-bottom: 15px;
}

.product-card {
  text-align: left;
}

.product-image-container {
  position: relative;
  overflow: hidden;
  border-radius: 20px;
  aspect-ratio: 3 / 4;
  background: url({{ 'bg-card.jpg' | asset_url }});
  background-size: cover;
  background-position: center;
}

.product-card img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  display: block;
  filter: brightness(.92);
  transition: transform 0.6s cubic-bezier(0.37, 0, 0.63, 1);
  position: relative;
  z-index: 1;
}

.product-card .primary-image {
  z-index: 1;
}

.product-card .secondary-image {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.product-card:hover .primary-image {
  opacity: 1;
}

.product-card:hover .primary-image.has-secondary {
  opacity: 0;
}

.product-card:hover .secondary-image {
  opacity: 1;
}

.pagination {
  margin-top: 20px;
  text-align: center;
}

.product-card.hidden {
  display: none;
}

.out-of-stock-overlay {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
}

.out-of-stock-text {
  font-size: 14px;
  font-weight: 400 !important;
  border-radius: 20px 0 8px 0
}

.mobile-filter-button {
  display: none;
  position: fixed;
  bottom: 30px;
  right: 30px;
  z-index: 1000;
  background: none;
  border: none;
  cursor: pointer;
  transform: scale(1.3)
}

.filter-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.close-filter {
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
  color: var(--color-bg);
}

.apply-filters {
  width: 100%;
  padding: 10px;
  background-color: #E9DBD0;
  border: none;
  cursor: pointer;
  font-weight: bold;
  position: relative !important;
}

/* Custom checkbox styles */
.custom-checkbox {
  display: flex;
  align-items: center;
  position: relative;
  padding-left: 35px;
  cursor: pointer;
  font-size: 16px;
  user-select: none;
}

.custom-checkbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  border: 2px solid var(--color-bg);
  background-color: transparent;
  border-radius: 6px;
}

.custom-checkbox:hover input ~ .checkmark {
  background-color: rgba(var(--color-bg-rgb), 0.1);
}

.custom-checkbox input:checked ~ .checkmark {
  background-color: var(--color-bg);
}

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

.custom-checkbox input:checked ~ .checkmark:after {
  display: block;
}

.custom-checkbox .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid var(--color-contrast-higher);
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.tag-name {
  margin-left: 10px;
}

@media screen and (max-width: 767px) {
  .custom-filter-and-grid {
    flex-direction: column;
  }

  .filter-sidebar {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background-color: black;
    color: white;
    z-index: 1001;
    overflow-y: auto;
    padding: 20px;
    border-radius: 0;
  }

  .filter-sidebar.active {
    display: block;
  }

  .mobile-filter-button {
    display: block;
  }

  .product-grid-wrapper {
    position: relative;
    width: 100%;
    overflow: hidden;
    padding-bottom: 100px;
    -webkit-transform: translate3d(0,0,0);
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 12px;
    width: 100%;
    position: relative;
    z-index: 1;
  }

  .apply-filters {
    position: absolute !important;
    bottom: 20px;
    left: 20px;
    right: 20px;
    width: calc(100% - 40px);
  }

  .close-filter {
    /* display: none; */
  }

  .filter-sidebar.active .close-filter {
    display: block;
  }
}

@media screen and (min-width: 767px) {
  .close-filter {
    display: none;
  }
}
</style>

<div class="px-d">
  <div class="custom-filter-and-grid">
    <div class="filter-sidebar bg-dark color-bg px-8 py-8" id="filterSidebar">
      <div class="filter-header mb-16 mt-16">
        <h2 class="color-bg w-full text-center">{{ section.settings.filter_title }}</h2>
        <button class="close-filter" id="closeFilter">&times;</button>
      </div>
      <form id="filter-form">
        {% comment %} Tag filter {% endcomment %}
        {% assign all_tags = collection.all_tags | sort %}
        {% if all_tags.size > 0 %}
          <div class="filter-group pb-16">
            <ul>
              {% for tag in all_tags %}
                {% unless tag == 'Ready to wear' %}
                  <li class="mb-8">
                    <label class="custom-checkbox">
                      <input type="checkbox" name="tags" value="{{ tag | downcase }}">
                      <span class="checkmark"></span>
                      <span class="tag-name">{{ tag | upcase }}</span>
                    </label>
                  </li>
                {% endunless %}
              {% endfor %}
            </ul>
          </div>
        {% endif %}

        <button type="submit" class="apply-filters  px-4 py-2 btn">APPLY FILTERS</button>
      </form>
    </div>

    <div class="product-grid-wrapper">
      <div class="product-grid">
        {% paginate collection.products by 24 %}
          {% for product in collection.products %}
            <div class="product-card" data-tags="{{ product.tags | join: ',' | downcase }}">
              <a href="{{ product.url }}">
                <div class="product-image-container">
                  {% unless product.available %}
                    <div class="out-of-stock-overlay">
                      <span class="out-of-stock-text bg-dark color-bg py-2 pl-6 pr-4 flex items-center">OUT OF STOCK</span>
                    </div>
                  {% endunless %}
                  {% if product.featured_image %}
                    <img src="{{ product.featured_image | img_url: '300x400', crop: 'center' }}" alt="{{ product.title }}" width="300" height="400" loading="lazy" class="primary-image {% if product.images[1] %}has-secondary{% endif %}">
                    {% if product.images[1] %}
                      <img src="{{ product.images[1] | img_url: '300x400', crop: 'center' }}" alt="{{ product.title }}" width="300" height="400" loading="lazy" class="secondary-image">
                    {% endif %}
                  {% else %}
                    {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                  {% endif %}
                </div>
                <h3 class="mt-4">{{ product.title }}</h3>
                <p>{{ product.price | money_without_trailing_zeros }}</p>
              </a>
            </div>
          {% else %}
            <p>No products found</p>
          {% endfor %}

          {% if paginate.pages > 1 %}
            <div class="pagination">
              {{ paginate | default_pagination }}
            </div>
          {% endif %}
        {% endpaginate %}
      </div>
    </div>
  </div>
</div>

<button id="mobileFilterButton" class="mobile-filter-button">
  <svg width="54" height="54" viewBox="0 0 54 54" fill="none" xmlns="http://www.w3.org/2000/svg">
  <rect width="54" height="54" rx="27" fill="black"/>
  <g clip-path="url(#clip0_4673_564)">
  <path d="M41.1674 31.7533H12.8332C12.373 31.7533 12 32.1263 12 32.5865C12 33.0467 12.373 33.4197 12.8332 33.4197H41.1674C41.6276 33.4197 42.0006 33.0467 42.0006 32.5865C42.0006 32.1263 41.6276 31.7533 41.1674 31.7533Z" fill="#E9DBD0"/>
  <path d="M41.1674 21.894H12.8332C12.373 21.894 12 22.2671 12 22.7272C12 23.1874 12.373 23.5604 12.8332 23.5604H41.1674C41.6276 23.5604 42.0006 23.1874 42.0006 22.7272C42.0006 22.2671 41.6276 21.894 41.1674 21.894Z" fill="#E9DBD0"/>
  <path d="M20.1814 25.4545C21.6877 25.4545 22.9088 24.2335 22.9088 22.7272C22.9088 21.2209 21.6877 19.9999 20.1814 19.9999C18.6752 19.9999 17.4541 21.2209 17.4541 22.7272C17.4541 24.2335 18.6752 25.4545 20.1814 25.4545Z" fill="black" stroke="#E9DBD0" stroke-width="1.36366"/>
  <path d="M32.4558 35.0002C33.9621 35.0002 35.1832 33.7791 35.1832 32.2729C35.1832 30.7666 33.9621 29.5455 32.4558 29.5455C30.9496 29.5455 29.7285 30.7666 29.7285 32.2729C29.7285 33.7791 30.9496 35.0002 32.4558 35.0002Z" fill="black" stroke="#E9DBD0" stroke-width="1.36366"/>
  </g>
  <defs>
  <clipPath id="clip0_4673_564">
  <rect width="30.0006" height="17.7276" fill="white" transform="translate(11.999 18.6361)"/>
  </clipPath>
  </defs>
  </svg>
</button>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const filterForm = document.getElementById('filter-form');
  const productCards = document.querySelectorAll('.product-card');
  const mobileFilterButton = document.getElementById('mobileFilterButton');
  const filterSidebar = document.getElementById('filterSidebar');
  const closeFilterButton = document.getElementById('closeFilter');

  // Mobile filter toggle
  mobileFilterButton.addEventListener('click', function() {
    filterSidebar.classList.add('active');
    document.body.style.overflow = 'hidden';
    closeFilterButton.style.display = 'block';
  });

  // Close filter overlay
  closeFilterButton.addEventListener('click', function() {
    filterSidebar.classList.remove('active');
    document.body.style.overflow = '';
    closeFilterButton.style.display = 'none';
  });

  filterForm.addEventListener('submit', function(e) {
    e.preventDefault();
    applyFilters();
    if (window.innerWidth <= 767) {
      filterSidebar.classList.remove('active');
      document.body.style.overflow = '';
      closeFilterButton.style.display = 'none';
    }
  });

  function applyFilters() {
    const selectedTags = Array.from(filterForm.querySelectorAll('input[name="tags"]:checked')).map(input => input.value.toLowerCase());

    let visibleProducts = 0;

    productCards.forEach(card => {
      const cardTags = card.dataset.tags.split(',').map(tag => tag.trim().toLowerCase());
      const tagMatch = selectedTags.length === 0 || selectedTags.some(tag => cardTags.includes(tag));

      if (tagMatch) {
        card.classList.remove('hidden');
        visibleProducts++;
      } else {
        card.classList.add('hidden');
      }
    });

    console.log('Filtered products:', visibleProducts);
  }
});
</script>
